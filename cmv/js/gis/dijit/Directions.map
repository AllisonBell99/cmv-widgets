{"version":3,"file":"Directions.js","sources":["Directions.js"],"names":["define","declare","_WidgetBase","_TemplatedMixin","Directions","template","lang","Menu","MenuItem","PopupMenuItem","MenuSeparator","Point","SpatialReference","topic","i18n","templateString","postCreate","this","inherited","arguments","directions","mixin","map","options","directionsNode","startup","_activateButton","style","display","mapRightClickMenu","addRightClickMenu","on","hitch","evt","mapRightClickPoint","mapPoint","menu","addChild","label","labels","directionsFromHere","onClick","directionsToHere","addStop","useMyLocationAsStart","useMyLocationAsEnd","popup","clearStops","reset","directionsFrom","updateStop","then","directionsTo","stops","length","doRoute","parentWidget","open","toggle","getDirections","startAtMyLocation","getGeoLocation","endAtMyLocation","leg","navigator","geolocation","getCurrentPosition","publish","title","errors","geoLocation","message","level","timeout","opacity","locationSuccess","event","coords","longitude","latitude","wkid","locationError","error","location"],"mappings":";;;;;AAAAA,QACG,qBACA,oBACA,wBACA,wBACA,mDACA,kBACA,aACA,iBACA,sBACA,sBACA,sBACA,wBACA,aACA,uCACA,SAAUC,EAASC,EAAaC,EAAiBC,EAAYC,EAAUC,EAAMC,EAAMC,EAAUC,EAAeC,EAAeC,EAAOC,EAAkBC,EAAOC,GAE1J,MAAOb,IAASC,EAAaC,IACzBY,eAAgBV,EAChBS,KAAMA,EACNE,WAAY,WACRC,KAAKC,UAAUC,WACfF,KAAKG,WAAa,GAAIhB,GAAWE,EAAKe,OAClCC,IAAKL,KAAKK,KACXL,KAAKM,SAAUN,KAAKO,gBACvBP,KAAKG,WAAWK,UAChBR,KAAKG,WAAWM,gBAAgBC,MAAMC,QAAU,OAE5CX,KAAKY,mBACLZ,KAAKa,qBAGbA,kBAAmB,WAEfb,KAAKK,IAAIS,GAAG,YAAazB,EAAK0B,MAAMf,KAAM,SAAUgB,GAChDhB,KAAKiB,mBAAqBD,EAAIE,YAGlClB,KAAKmB,KAAO,GAAI7B,GAChBU,KAAKmB,KAAKC,SAAS,GAAI7B,IACnB8B,MAAOrB,KAAKH,KAAKyB,OAAOC,mBACxBC,QAASnC,EAAK0B,MAAMf,KAAM,qBAE9BA,KAAKmB,KAAKC,SAAS,GAAI7B,IACnB8B,MAAOrB,KAAKH,KAAKyB,OAAOG,iBACxBD,QAASnC,EAAK0B,MAAMf,KAAM,mBAE9BA,KAAKmB,KAAKC,SAAS,GAAI3B,IACvBO,KAAKmB,KAAKC,SAAS,GAAI7B,IACnB8B,MAAOrB,KAAKH,KAAKyB,OAAOI,QACxBF,QAASnC,EAAK0B,MAAMf,KAAM,cAE9BA,KAAKmB,KAAKC,SAAS,GAAI3B,IACvBO,KAAKmB,KAAKC,SAAS,GAAI7B,IACnB8B,MAAOrB,KAAKH,KAAKyB,OAAOK,qBACxBH,QAASnC,EAAK0B,MAAMf,KAAM,iBAAkB,qBAEhDA,KAAKmB,KAAKC,SAAS,GAAI7B,IACnB8B,MAAOrB,KAAKH,KAAKyB,OAAOM,mBACxBJ,QAASnC,EAAK0B,MAAMf,KAAM,iBAAkB,mBAIhDA,KAAKY,kBAAkBQ,SAAS,GAAI5B,IAChC6B,MAAOrB,KAAKH,KAAKyB,OAAOnB,WACxB0B,MAAO7B,KAAKmB,SAGpBW,WAAY,WACR9B,KAAKG,WAAW4B,SAEpBC,eAAgB,WACZhC,KAAKG,WAAW8B,WAAWjC,KAAKiB,mBAAoB,GAAGiB,KAAK7C,EAAK0B,MAAMf,KAAM,aAEjFmC,aAAc,WACVnC,KAAKG,WAAW8B,WAAWjC,KAAKiB,mBAAoBjB,KAAKG,WAAWiC,MAAMC,OAAS,GAAGH,KAAK7C,EAAK0B,MAAMf,KAAM,aAEhH0B,QAAS,WACL1B,KAAKG,WAAWuB,QAAQ1B,KAAKiB,mBAAoBjB,KAAKG,WAAWiC,MAAMC,OAAS,GAAGH,KAAK7C,EAAK0B,MAAMf,KAAM,aAE7GsC,QAAS,WACDtC,KAAKuC,eAAiBvC,KAAKuC,aAAaC,MACxCxC,KAAKuC,aAAaE,SAElBzC,KAAKG,WAAWiC,MAAM,IAAMpC,KAAKG,WAAWiC,MAAM,IAClDpC,KAAKG,WAAWuC,iBAGxBC,kBAAmB,WACf3C,KAAK4C,eAAe,mBAExBC,gBAAiB,WACb7C,KAAK4C,eAAe,iBAExBA,eAAgB,SAAUE,GAClBC,WAAaA,UAAUC,YACvBD,UAAUC,YAAYC,mBAAmB5D,EAAK0B,MAAMf,KAAM,kBAAmB8C,GAAMzD,EAAK0B,MAAMf,KAAM,kBAEpGJ,EAAMsD,QAAQ,iBACVC,MAAOnD,KAAKH,KAAKuD,OAAOC,YAAYF,MACpCG,QAAStD,KAAKH,KAAKuD,OAAOC,YAAYC,QACtCC,MAAO,UACPC,QAAS,IACTC,QAAS,KAIrBC,gBAAiB,SAAUZ,EAAKa,GAC5B3D,KAAKiB,mBAAqB,GAAIvB,GAAMiE,EAAMC,OAAOC,UAAWF,EAAMC,OAAOE,SAAU,GAAInE,IACnFoE,KAAM,QAEV/D,KAAK8C,MAETkB,cAAe,SAAUC,GACrBrE,EAAMsD,QAAQ,iBACVC,MAAOnD,KAAKH,KAAKuD,OAAOc,SAASf,MACjCG,QAAStD,KAAKH,KAAKuD,OAAOc,SAASZ,QAAUW,EAAMX,QACnDC,MAAO,UACPC,QAAS,IACTC,QAAS","sourcesContent":["define([\n   'dojo/_base/declare',\n   'dijit/_WidgetBase',\n   'dijit/_TemplatedMixin',\n   'esri/dijit/Directions',\n   'dojo/text!./Directions/templates/Directions.html',\n   'dojo/_base/lang',\n   'dijit/Menu',\n   'dijit/MenuItem',\n   'dijit/PopupMenuItem',\n   'dijit/MenuSeparator',\n   'esri/geometry/Point',\n   'esri/SpatialReference',\n   'dojo/topic',\n   'dojo/i18n!./Directions/nls/resource'\n], function (declare, _WidgetBase, _TemplatedMixin, Directions, template, lang, Menu, MenuItem, PopupMenuItem, MenuSeparator, Point, SpatialReference, topic, i18n) {\n\n    return declare([_WidgetBase, _TemplatedMixin], {\n        templateString: template,\n        i18n: i18n,\n        postCreate: function () {\n            this.inherited(arguments);\n            this.directions = new Directions(lang.mixin({\n                map: this.map\n            }, this.options), this.directionsNode);\n            this.directions.startup();\n            this.directions._activateButton.style.display = 'none'; //temp fix for 3.12 map click button.\n\n            if (this.mapRightClickMenu) {\n                this.addRightClickMenu();\n            }\n        },\n        addRightClickMenu: function () {\n            // capture map right click position\n            this.map.on('MouseDown', lang.hitch(this, function (evt) {\n                this.mapRightClickPoint = evt.mapPoint;\n            }));\n\n            this.menu = new Menu();\n            this.menu.addChild(new MenuItem({\n                label: this.i18n.labels.directionsFromHere,\n                onClick: lang.hitch(this, 'directionsFrom')\n            }));\n            this.menu.addChild(new MenuItem({\n                label: this.i18n.labels.directionsToHere,\n                onClick: lang.hitch(this, 'directionsTo')\n            }));\n            this.menu.addChild(new MenuSeparator());\n            this.menu.addChild(new MenuItem({\n                label: this.i18n.labels.addStop,\n                onClick: lang.hitch(this, 'addStop')\n            }));\n            this.menu.addChild(new MenuSeparator());\n            this.menu.addChild(new MenuItem({\n                label: this.i18n.labels.useMyLocationAsStart,\n                onClick: lang.hitch(this, 'getGeoLocation', 'directionsFrom')\n            }));\n            this.menu.addChild(new MenuItem({\n                label: this.i18n.labels.useMyLocationAsEnd,\n                onClick: lang.hitch(this, 'getGeoLocation', 'directionsTo')\n            }));\n\n            // add this widgets menu as a sub menu to the map right click menu\n            this.mapRightClickMenu.addChild(new PopupMenuItem({\n                label: this.i18n.labels.directions,\n                popup: this.menu\n            }));\n        },\n        clearStops: function () {\n            this.directions.reset();\n        },\n        directionsFrom: function () {\n            this.directions.updateStop(this.mapRightClickPoint, 0).then(lang.hitch(this, 'doRoute'));\n        },\n        directionsTo: function () {\n            this.directions.updateStop(this.mapRightClickPoint, this.directions.stops.length - 1).then(lang.hitch(this, 'doRoute'));\n        },\n        addStop: function () {\n            this.directions.addStop(this.mapRightClickPoint, this.directions.stops.length - 1).then(lang.hitch(this, 'doRoute'));\n        },\n        doRoute: function () {\n            if (this.parentWidget && !this.parentWidget.open) {\n                this.parentWidget.toggle();\n            }\n            if (this.directions.stops[0] && this.directions.stops[1]) {\n                this.directions.getDirections();\n            }\n        },\n        startAtMyLocation: function () {\n            this.getGeoLocation('directionsFrom');\n        },\n        endAtMyLocation: function () {\n            this.getGeoLocation('directionsTo');\n        },\n        getGeoLocation: function (leg) {\n            if (navigator && navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(lang.hitch(this, 'locationSuccess', leg), lang.hitch(this, 'locationError'));\n            } else {\n                topic.publish('growler/growl', {\n                    title: this.i18n.errors.geoLocation.title,\n                    message: this.i18n.errors.geoLocation.message,\n                    level: 'default',\n                    timeout: 10000,\n                    opacity: 1.0\n                });\n            }\n        },\n        locationSuccess: function (leg, event) {\n            this.mapRightClickPoint = new Point(event.coords.longitude, event.coords.latitude, new SpatialReference({\n                wkid: 4326\n            }));\n            this[leg]();\n        },\n        locationError: function (error) {\n            topic.publish('growler/growl', {\n                title: this.i18n.errors.location.title,\n                message: this.i18n.errors.location.message + error.message,\n                level: 'default',\n                timeout: 10000,\n                opacity: 1.0\n            });\n        }\n    });\n});"]}