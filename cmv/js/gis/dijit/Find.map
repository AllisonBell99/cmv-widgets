{"version":3,"file":"Find.js","sources":["Find.js"],"names":["define","declare","_WidgetBase","_TemplatedMixin","_WidgetsInTemplateMixin","domConstruct","lang","array","on","keys","Memory","OnDemandGrid","Selection","Keyboard","GraphicsLayer","Graphic","SimpleRenderer","SimpleMarkerSymbol","SimpleLineSymbol","SimpleFillSymbol","graphicsUtils","FindTask","FindParameters","Extent","FindTemplate","i18n","widgetsInTemplate","templateString","baseClass","spatialReference","pointExtentSize","defaultSymbols","point","type","style","size","color","angle","xoffset","yoffset","outline","width","polyline","polygon","postCreate","this","inherited","arguments","map","wkid","createGraphicLayers","own","searchTextDijit","hitch","evt","keyCode","ENTER","search","queryIdx","k","queryLen","queries","length","id","queryStore","data","querySelectDijit","set","querySelectDom","display","pointSymbol","polylineSymbol","polygonSymbol","pointRenderer","polylineRenderer","polygonRenderer","symbols","mixin","pointGraphics","title","label","description","setRenderer","polylineGraphics","polygonGraphics","addLayer","query","searchText","get","minChars","findResultsNode","innerHTML","createResultsGrid","clearResultsGrid","clearFeatures","empty","url","layerIds","searchFields","findParams","returnGeometry","layerDefinitions","layerDefs","contains","containsSearchText","checked","outSpatialReference","searching","findTask","execute","resultsStore","idProperty","resultsGrid","Grid","selectionMode","cellNavigation","showHeader","store","columns","layerName","foundFieldName","value","sort","attribute","descending","findResultsGrid","startup","showResults","results","resultText","resultIdx","s","resultsLabel","multipleResultsSuffix","labelPrefix","labelSuffix","highlightFeatures","showResultsGrid","setData","refresh","lyrDisplay","styleColumn","hideGrid","unique","forEach","result","graphic","feature","geometry","x","y","add","paths","rings","ren","zoomExtent","graphics","getPointFeaturesExtent","graphicsExtent","union","zoomToExtent","zoomOnRowClick","event","getFeatureFromRowEvent","getFeatureExtentAndZoom","zoomOnKeyboardNavigation","row","extent","getExtent","getExtentFromPoint","setExtent","expand","clearResults","searchFormDijit","reset","setValue","resultStore","clear","pointFeatures","sz","pt","xmin","ymin","xmax","ymax","_onQueryChange"],"mappings":"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","sourcesContent":["define([\n\t'dojo/_base/declare',\n\t'dijit/_WidgetBase',\n\t'dijit/_TemplatedMixin',\n\t'dijit/_WidgetsInTemplateMixin',\n\t'dojo/dom-construct',\n\t'dojo/_base/lang',\n\t'dojo/_base/array',\n\t'dojo/on',\n\t'dojo/keys',\n\t'dojo/store/Memory',\n\t'dgrid/OnDemandGrid',\n\t'dgrid/Selection',\n\t'dgrid/Keyboard',\n\t'esri/layers/GraphicsLayer',\n\t'esri/graphic',\n\t'esri/renderers/SimpleRenderer',\n\t'esri/symbols/SimpleMarkerSymbol',\n\t'esri/symbols/SimpleLineSymbol',\n\t'esri/symbols/SimpleFillSymbol',\n\t'esri/graphicsUtils',\n\t'esri/tasks/FindTask',\n\t'esri/tasks/FindParameters',\n\t'esri/geometry/Extent',\n\t'dojo/text!./Find/templates/Find.html',\n\t'dojo/i18n!./Find/nls/resource',\n\n\t'dijit/form/Form',\n\t'dijit/form/FilteringSelect',\n\t'dijit/form/ValidationTextBox',\n\t'dijit/form/CheckBox',\n\t'xstyle/css!./Find/css/Find.css'\n], function (declare, _WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin, domConstruct, lang, array, on, keys, Memory, OnDemandGrid, Selection, Keyboard, GraphicsLayer, Graphic, SimpleRenderer, SimpleMarkerSymbol, SimpleLineSymbol, SimpleFillSymbol, graphicsUtils, FindTask, FindParameters, Extent, FindTemplate, i18n) {\n\treturn declare([_WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin], {\n\t\twidgetsInTemplate: true,\n\t\ttemplateString: FindTemplate,\n\t\tbaseClass: 'gis_FindDijit',\n\t\ti18n: i18n,\n\n\t\t// Spatial Reference. uses the map's spatial reference if none provided\n\t\tspatialReference: null,\n\n\t\t// Use 0.0001 for decimal degrees (wkid 4326)\n\t\t// or 500 for meters/feet\n\t\tpointExtentSize: null,\n\n\t\t// default symbology for found features\n\t\tdefaultSymbols: {\n\t\t\tpoint: {\n\t\t\t\ttype: 'esriSMS',\n\t\t\t\tstyle: 'esriSMSCircle',\n\t\t\t\tsize: 25,\n\t\t\t\tcolor: [0, 255, 255, 32],\n\t\t\t\tangle: 0,\n\t\t\t\txoffset: 0,\n\t\t\t\tyoffset: 0,\n\t\t\t\toutline: {\n\t\t\t\t\ttype: 'esriSLS',\n\t\t\t\t\tstyle: 'esriSLSSolid',\n\t\t\t\t\tcolor: [0, 255, 255, 255],\n\t\t\t\t\twidth: 2\n\t\t\t\t}\n\t\t\t},\n\t\t\tpolyline: {\n\t\t\t\ttype: 'esriSLS',\n\t\t\t\tstyle: 'esriSLSSolid',\n\t\t\t\tcolor: [0, 255, 255, 255],\n\t\t\t\twidth: 3\n\t\t\t},\n\t\t\tpolygon: {\n\t\t\t\ttype: 'esriSFS',\n\t\t\t\tstyle: 'esriSFSSolid',\n\t\t\t\tcolor: [0, 255, 255, 32],\n\t\t\t\toutline: {\n\t\t\t\t\ttype: 'esriSLS',\n\t\t\t\t\tstyle: 'esriSLSSolid',\n\t\t\t\t\tcolor: [0, 255, 255, 255],\n\t\t\t\t\twidth: 3\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tpostCreate: function () {\n\t\t\tthis.inherited(arguments);\n\n\t\t\tif (this.spatialReference === null) {\n\t\t\t\tthis.spatialReference = this.map.spatialReference.wkid;\n\t\t\t}\n\t\t\tif (this.pointExtentSize === null) {\n\t\t\t\tif (this.spatialReference === 4326) { // special case for geographic lat/lng\n\t\t\t\t\tthis.pointExtentSize = 0.0001;\n\t\t\t\t} else {\n\t\t\t\t\tthis.pointExtentSize = 500; // could be feet or meters\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.createGraphicLayers();\n\n\t\t\t// allow pressing enter key to initiate the search\n\t\t\tthis.own(on(this.searchTextDijit, 'keyup', lang.hitch(this, function (evt) {\n\t\t\t\tif (evt.keyCode === keys.ENTER) {\n\t\t\t\t\tthis.search();\n\t\t\t\t}\n\t\t\t})));\n\n\t\t\tthis.queryIdx = 0;\n\n\t\t\t// add an id so the queries becomes key/value pair store\n\t\t\tvar k = 0, queryLen = this.queries.length;\n\t\t\tfor (k = 0; k < queryLen; k++) {\n\t\t\t\tthis.queries[k].id = k;\n\t\t\t}\n\n\t\t\t// add the queries to the drop-down list\n\t\t\tif (queryLen > 1) {\n\t\t\t\tvar queryStore = new Memory({\n\t\t\t\t\tdata: this.queries\n\t\t\t\t});\n\t\t\t\tthis.querySelectDijit.set('store', queryStore);\n\t\t\t\tthis.querySelectDijit.set('value', this.queryIdx);\n\t\t\t} else {\n\t\t\t\tthis.querySelectDom.style.display = 'none';\n\t\t\t}\n\n\t\t},\n\n\t\tcreateGraphicLayers: function () {\n\t\t\tvar pointSymbol = null,\n\t\t\t\tpolylineSymbol = null,\n\t\t\t\tpolygonSymbol = null;\n\t\t\tvar pointRenderer = null,\n\t\t\t\tpolylineRenderer = null,\n\t\t\t\tpolygonRenderer = null;\n\n\t\t\tvar symbols = lang.mixin({}, this.symbols);\n\t\t\t// handle each property to preserve as much of the object heirarchy as possible\n\t\t\tsymbols = {\n\t\t\t\tpoint: lang.mixin(this.defaultSymbols.point, symbols.point),\n\t\t\t\tpolyline: lang.mixin(this.defaultSymbols.polyline, symbols.polyline),\n\t\t\t\tpolygon: lang.mixin(this.defaultSymbols.polygon, symbols.polygon)\n\t\t\t};\n\n\t\t\t// points\n\t\t\tthis.pointGraphics = new GraphicsLayer({\n\t\t\t\tid: 'findGraphics_point',\n\t\t\t\ttitle: 'Find'\n\t\t\t});\n\n\t\t\tif (symbols.point) {\n\t\t\t\tpointSymbol = new SimpleMarkerSymbol(symbols.point);\n\t\t\t\tpointRenderer = new SimpleRenderer(pointSymbol);\n\t\t\t\tpointRenderer.label = 'Find Results (Points)';\n\t\t\t\tpointRenderer.description = 'Find results (Points)';\n\t\t\t\tthis.pointGraphics.setRenderer(pointRenderer);\n\t\t\t}\n\n\t\t\t// poly line\n\t\t\tthis.polylineGraphics = new GraphicsLayer({\n\t\t\t\tid: 'findGraphics_line',\n\t\t\t\ttitle: 'Find Graphics'\n\t\t\t});\n\n\t\t\tif (symbols.polyline) {\n\t\t\t\tpolylineSymbol = new SimpleLineSymbol(symbols.polyline);\n\t\t\t\tpolylineRenderer = new SimpleRenderer(polylineSymbol);\n\t\t\t\tpolylineRenderer.label = 'Find Results (Lines)';\n\t\t\t\tpolylineRenderer.description = 'Find Results (Lines)';\n\t\t\t\tthis.polylineGraphics.setRenderer(polylineRenderer);\n\t\t\t}\n\n\t\t\t// polygons\n\t\t\tthis.polygonGraphics = new GraphicsLayer({\n\t\t\t\tid: 'findGraphics_polygon',\n\t\t\t\ttitle: 'Find Graphics'\n\t\t\t});\n\n\t\t\tif (symbols.polygon) {\n\t\t\t\tpolygonSymbol = new SimpleFillSymbol(symbols.polygon);\n\t\t\t\tpolygonRenderer = new SimpleRenderer(polygonSymbol);\n\t\t\t\tpolygonRenderer.label = 'Find Results (Polygons)';\n\t\t\t\tpolygonRenderer.description = 'Find Results (Polygons)';\n\t\t\t\tthis.polygonGraphics.setRenderer(polygonRenderer);\n\t\t\t}\n\n\t\t\tthis.map.addLayer(this.polygonGraphics);\n\t\t\tthis.map.addLayer(this.polylineGraphics);\n\t\t\tthis.map.addLayer(this.pointGraphics);\n\t\t},\n\t\tsearch: function () {\n\t\t\tvar query = this.queries[this.queryIdx];\n\t\t\tvar searchText = this.searchTextDijit.get('value');\n\t\t\tif (!query || !searchText || searchText.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (query.minChars && (searchText.length < query.minChars)) {\n\t\t\t\tthis.findResultsNode.innerHTML = 'You must enter at least ' + query.minChars + ' characters.';\n\t\t\t\tthis.findResultsNode.style.display = 'block';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.createResultsGrid();\n\t\t\tthis.clearResultsGrid();\n\t\t\tthis.clearFeatures();\n\t\t\tdomConstruct.empty(this.findResultsNode);\n\n\t\t\tif (!query || !query.url || !query.layerIds || !query.searchFields) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//create find parameters\n\t\t\tvar findParams = new FindParameters();\n\t\t\tfindParams.returnGeometry = true;\n\t\t\tfindParams.layerIds = query.layerIds;\n\t\t\tfindParams.searchFields = query.searchFields;\n\t\t\tfindParams.layerDefinitions = query.layerDefs;\n\n\t\t\tfindParams.searchText = searchText;\n\t\t\tfindParams.contains = !this.containsSearchText.checked;\n\n\t\t\tfindParams.outSpatialReference = {\n\t\t\t\twkid: this.spatialReference\n\t\t\t};\n\n\t\t\tthis.findResultsNode.innerHTML = this.i18n.searching;\n\t\t\tthis.findResultsNode.style.display = 'block';\n\n\t\t\tvar findTask = new FindTask(query.url);\n\t\t\tfindTask.execute(findParams, lang.hitch(this, 'showResults'));\n\t\t},\n\n\t\tcreateResultsGrid: function () {\n\t\t\tif (!this.resultsStore) {\n\t\t\t\tthis.resultsStore = new Memory({\n\t\t\t\t\tidProperty: 'id',\n\t\t\t\t\tdata: []\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!this.resultsGrid) {\n\t\t\t\tvar Grid = declare([OnDemandGrid, Keyboard, Selection]);\n\t\t\t\tthis.resultsGrid = new Grid({\n\t\t\t\t\tselectionMode: 'single',\n\t\t\t\t\tcellNavigation: false,\n\t\t\t\t\tshowHeader: true,\n\t\t\t\t\tstore: this.resultsStore,\n\t\t\t\t\tcolumns: {\n\t\t\t\t\t\tlayerName: 'Layer',\n\t\t\t\t\t\tfoundFieldName: 'Field',\n\t\t\t\t\t\tvalue: 'Result'\n\t\t\t\t\t},\n\t\t\t\t\tsort: [{\n\t\t\t\t\t\tattribute: 'value',\n\t\t\t\t\t\tdescending: false\n\t\t\t\t\t}]\n\t\t\t\t\t//minRowsPerPage: 250,\n\t\t\t\t\t//maxRowsPerPage: 500\n\t\t\t\t}, this.findResultsGrid);\n\n\t\t\t\tthis.resultsGrid.startup();\n\t\t\t\tthis.resultsGrid.on('.dgrid-row:click', lang.hitch(this, 'zoomOnRowClick'));\n\t\t\t\tthis.resultsGrid.on('.dgrid-row:keyup', lang.hitch(this, 'zoomOnKeyboardNavigation'));\n\t\t\t}\n\t\t},\n\n\t\tshowResults: function (results) {\n\t\t\tvar resultText = '';\n\t\t\tthis.resultIdx = 0;\n\t\t\tthis.results = results;\n\n\t\t\tif (this.results.length > 0) {\n\t\t\t\t//var s = (this.results.length === 1) ? '' : 's';\n\t\t\t\tvar s = (this.results.length === 1) ? '' : this.i18n.resultsLabel.multipleResultsSuffix;\n\t\t\t\t//resultText = this.results.length + ' Result' + s + ' Found';\n\t\t\t\tresultText = this.results.length + ' ' + this.i18n.resultsLabel.labelPrefix + s + ' ' + this.i18n.resultsLabel.labelSuffix;\n\t\t\t\tthis.highlightFeatures();\n\t\t\t\tthis.showResultsGrid();\n\t\t\t} else {\n\t\t\t\tresultText = 'No Results Found';\n\t\t\t}\n\t\t\tthis.findResultsNode.innerHTML = resultText;\n\n\t\t},\n\n\t\tshowResultsGrid: function () {\n\t\t\tvar query = this.queries[this.queryIdx];\n\t\t\tthis.resultsGrid.store.setData(this.results);\n\t\t\tthis.resultsGrid.refresh();\n\n\t\t\tvar lyrDisplay = 'block';\n\t\t\tif (query.layerIds.length === 1) {\n\t\t\t\tlyrDisplay = 'none';\n\t\t\t}\n\t\t\tthis.resultsGrid.styleColumn('layerName', 'display:' + lyrDisplay);\n\n\t\t\tif (query && query.hideGrid !== true) {\n\t\t\t\tthis.findResultsGrid.style.display = 'block';\n\t\t\t}\n\t\t},\n\n\t\thighlightFeatures: function () {\n\t\t\tvar unique = 0;\n\t\t\tarray.forEach(this.results, function (result) {\n\t\t\t\t// add a unique key for the store\n\t\t\t\tresult.id = unique;\n\t\t\t\tunique++;\n\t\t\t\tvar graphic, feature = result.feature;\n\t\t\t\tswitch (feature.geometry.type) {\n\t\t\t\tcase 'point':\n\t\t\t\t\t// only add points to the map that have an X/Y\n\t\t\t\t\tif (feature.geometry.x && feature.geometry.y) {\n\t\t\t\t\t\tgraphic = new Graphic(feature.geometry);\n\t\t\t\t\t\tthis.pointGraphics.add(graphic);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'polyline':\n\t\t\t\t\t// only add polylines to the map that have paths\n\t\t\t\t\tif (feature.geometry.paths && feature.geometry.paths.length > 0) {\n\t\t\t\t\t\tgraphic = new Graphic(feature.geometry);\n\t\t\t\t\t\tthis.polylineGraphics.add(graphic);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'polygon':\n\t\t\t\t\t// only add polygons to the map that have rings\n\t\t\t\t\tif (feature.geometry.rings && feature.geometry.rings.length > 0) {\n\t\t\t\t\t\tgraphic = new Graphic(feature.geometry, null, {\n\t\t\t\t\t\t\tren: 1\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.polygonGraphics.add(graphic);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\t// zoom to layer extent\n\t\t\tvar zoomExtent = null;\n\t\t\t//If the layer is a single point then extents are null\n\t\t\t// if there are no features in the layer then extents are null\n\t\t\t// the result of union() to null extents is null\n\n\t\t\tif (this.pointGraphics.graphics.length > 0) {\n\t\t\t\tzoomExtent = this.getPointFeaturesExtent(this.pointGraphics.graphics);\n\t\t\t}\n\t\t\tif (this.polylineGraphics.graphics.length > 0) {\n\t\t\t\tif (zoomExtent === null) {\n\t\t\t\t\tzoomExtent = graphicsUtils.graphicsExtent(this.polylineGraphics.graphics);\n\t\t\t\t} else {\n\t\t\t\t\tzoomExtent = zoomExtent.union(graphicsUtils.graphicsExtent(this.polylineGraphics.graphics));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.polygonGraphics.graphics.length > 0) {\n\t\t\t\tif (zoomExtent === null) {\n\t\t\t\t\tzoomExtent = graphicsUtils.graphicsExtent(this.polygonGraphics.graphics);\n\t\t\t\t} else {\n\t\t\t\t\tzoomExtent = zoomExtent.union(graphicsUtils.graphicsExtent(this.polygonGraphics.graphics));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (zoomExtent) {\n\t\t\t\tthis.zoomToExtent(zoomExtent);\n\t\t\t}\n\t\t},\n\n\t\tzoomOnRowClick: function (event) {\n\t\t\tvar feature = this.getFeatureFromRowEvent(event);\n\t\t\tthis.getFeatureExtentAndZoom(feature);\n\t\t},\n\n\t\tzoomOnKeyboardNavigation: function (event){\n\t\t\tvar keyCode = event.keyCode;\n\t\t\tif ( keyCode === 38 || keyCode === 40 ) {\n\t\t\t\tvar feature = this.getFeatureFromRowEvent(event);\n\t\t\t\tthis.getFeatureExtentAndZoom(feature);\n\t\t\t}\n\t\t},\n\n\t\tgetFeatureFromRowEvent: function (event) {\n\t\t\tvar row = this.resultsGrid.row(event);\n\t\t\tif (!row){\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar data = row.data;\n\t\t\tif (!data) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn data.feature;\n\t\t},\n\n\t\tgetFeatureExtentAndZoom: function (feature){\n\t\t\tif (!feature){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar extent = feature.geometry.getExtent();\n\t\t\tif (!extent && feature.geometry.type === 'point') {\n\t\t\t\textent = this.getExtentFromPoint(feature);\n\t\t\t}\n\n\t\t\tif (extent) {\n\t\t\t\tthis.zoomToExtent(extent);\n\t\t\t}\n\t\t},\n\n\t\tzoomToExtent: function (extent) {\n\t\t\tthis.map.setExtent(extent.expand(1.2));\n\t\t},\n\n\t\tclearResults: function () {\n\t\t\tthis.results = null;\n\t\t\tthis.clearResultsGrid();\n\t\t\tthis.clearFeatures();\n\t\t\tthis.searchFormDijit.reset();\n\t\t\tthis.querySelectDijit.setValue(this.queryIdx);\n\t\t\tdomConstruct.empty(this.findResultsNode);\n\t\t},\n\n\t\tclearResultsGrid: function () {\n\t\t\tif (this.resultStore) {\n\t\t\t\tthis.resultsStore.setData([]);\n\t\t\t}\n\t\t\tif (this.resultsGrid) {\n\t\t\t\tthis.resultsGrid.refresh();\n\t\t\t}\n\t\t\tthis.findResultsNode.style.display = 'none';\n\t\t\tthis.findResultsGrid.style.display = 'none';\n\t\t},\n\n\t\tclearFeatures: function () {\n\t\t\tthis.pointGraphics.clear();\n\t\t\tthis.polylineGraphics.clear();\n\t\t\tthis.polygonGraphics.clear();\n\t\t},\n\n\t\tgetPointFeaturesExtent: function (pointFeatures) {\n\t\t\tvar extent = graphicsUtils.graphicsExtent(pointFeatures);\n\t\t\tif (extent === null && pointFeatures.length > 0) {\n\t\t\t\textent = this.getExtentFromPoint(pointFeatures[0]);\n\t\t\t}\n\n\t\t\treturn extent;\n\t\t},\n\n\t\tgetExtentFromPoint: function (point) {\n\t\t\tvar sz = this.pointExtentSize; // hack\n\t\t\tvar pt = point.geometry;\n\t\t\tvar extent = new Extent({\n\t\t\t\t'xmin': pt.x - sz,\n\t\t\t\t'ymin': pt.y - sz,\n\t\t\t\t'xmax': pt.x + sz,\n\t\t\t\t'ymax': pt.y + sz,\n\t\t\t\t'spatialReference': {\n\t\t\t\t\twkid: this.spatialReference\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn extent;\n\t\t},\n\n\t\t_onQueryChange: function (queryIdx) {\n\t\t\tif (queryIdx >= 0 && queryIdx < this.queries.length) {\n\t\t\t\tthis.queryIdx = queryIdx;\n\t\t\t}\n\t\t}\n\t});\n});"]}