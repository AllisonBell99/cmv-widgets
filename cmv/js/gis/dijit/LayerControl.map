{"version":3,"file":"LayerControl.js","sources":["LayerControl.js"],"names":["define","declare","array","lang","topic","domAttr","domConst","WidgetBase","Container","ContentPane","Button","ProjectParameters","esriConfig","require","LayerControl","map","layerInfos","icons","expand","collapse","checked","unchecked","update","menu","folder","folderOpen","separated","overlayReorder","overlayLabel","vectorReorder","vectorLabel","noMenu","noLegend","noZoom","noTransparency","swipe","swiperButtonStyle","baseClass","_vectorContainer","_overlayContainer","_swiper","_swipeLayerToggleHandle","_controls","dynamic","feature","image","tiled","csv","georss","wms","kml","constructor","options","publish","source","error","postCreate","this","inherited","arguments","ControlContainer","addChild","className","content","create","modules","forEach","layerInfo","controlOptions","exclude","mod","type","push","hitch","control","_checkReorder","_addControl","layerControl","controller","layer","getLayer","layerTitle","title","mixin","expanded","sublayers","startup","_layerType","_moveUp","index","id","node","domNode","getPreviousSibling","indexOf","layerIds","reorderLayer","containerNode","insertBefore","previousSibling","graphicsLayerIds","_moveDown","getNextSibling","nextSibling","getChildren","child","_reorderUp","set","_reorderDown","_zoomToLayer","declaredClass","spatialReference","setExtent","fullExtent","defaults","geometryService","project","geometries","outSR","r","e","_swipeLayer","visible","disable","remove","enable","disableBtn","LayerSwipe","layers","label","onClick","subscribe","d","_swipeDisable","showAllLayers","show","hideAllLayers","hide"],"mappings":"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","sourcesContent":["define([\n    'dojo/_base/declare',\n    'dojo/_base/array',\n    'dojo/_base/lang',\n    'dojo/topic',\n    'dojo/dom-attr',\n    'dojo/dom-construct',\n    'dijit/_WidgetBase',\n    'dijit/_Container',\n    'dijit/layout/ContentPane',\n    'dijit/form/Button',\n    'esri/tasks/ProjectParameters',\n    'esri/config',\n    'require',\n    'xstyle/css!./LayerControl/css/LayerControl.css'\n], function (\n    declare,\n    array,\n    lang,\n    topic,\n    domAttr,\n    domConst,\n    WidgetBase,\n    Container,\n    ContentPane,\n    Button,\n    ProjectParameters,\n    esriConfig,\n    require\n) {\n    var LayerControl = declare([WidgetBase, Container], {\n        map: null,\n        layerInfos: [],\n        icons: {\n            expand: 'fa-plus-square-o',\n            collapse: 'fa-minus-square-o',\n            checked: 'fa-check-square-o',\n            unchecked: 'fa-square-o',\n            update: 'fa-refresh',\n            menu: 'fa-bars',\n            folder: 'fa-folder-o',\n            folderOpen: 'fa-folder-open-o'\n        },\n        separated: false,\n        overlayReorder: false,\n        overlayLabel: false,\n        vectorReorder: false,\n        vectorLabel: false,\n        noMenu: null,\n        noLegend: null,\n        noZoom: null,\n        noTransparency: null,\n        swipe: null,\n        swiperButtonStyle: 'position:absolute;top:20px;left:120px;z-index:50;',\n        // ^args\n        baseClass: 'layerControlDijit',\n        _vectorContainer: null,\n        _overlayContainer: null,\n        _swiper: null,\n        _swipeLayerToggleHandle: null,\n        _controls: {\n            dynamic: './LayerControl/controls/Dynamic',\n            feature: './LayerControl/controls/Feature',\n            image: './LayerControl/controls/Image',\n            tiled: './LayerControl/controls/Tiled',\n            csv: './LayerControl/controls/CSV',\n            georss: './LayerControl/controls/GeoRSS',\n            wms: './LayerControl/controls/WMS',\n            kml: './LayerControl/controls/KML'\n        },\n        constructor: function (options) {\n            options = options || {};\n            if (!options.map) {\n                topic.publish('viewer/handleError', {\n                    source: 'LayerControl',\n                    error: 'map option is required'\n                });\n                return;\n            }\n        },\n        postCreate: function () {\n            this.inherited(arguments);\n            if (this.separated) {\n                var ControlContainer = declare([WidgetBase, Container]);\n                // vector layer label\n                if (this.vectorLabel !== false) {\n                    this.addChild(new ContentPane({\n                        className: 'vectorLabelContainer',\n                        content: this.vectorLabel\n                    }, domConst.create('div')), 'first');\n                }\n                // vector layer control container\n                this._vectorContainer = new ControlContainer({\n                    className: 'vectorLayerContainer'\n                }, domConst.create('div'));\n                this.addChild(this._vectorContainer, 'last');\n                // overlay layer label\n                if (this.overlayLabel !== false) {\n                    this.addChild(new ContentPane({\n                        className: 'overlayLabelContainer',\n                        content: this.overlayLabel\n                    }, domConst.create('div')), 'last');\n                }\n                // overlay layer control container\n                this._overlayContainer = new ControlContainer({\n                    className: 'overlayLayerContainer'\n                }, domConst.create('div'));\n                this.addChild(this._overlayContainer, 'last');\n            } else {\n                this.overlayReorder = false;\n                this.vectorReorder = false;\n            }\n            // load only the modules we need\n            var modules = [];\n            // push layer control mods\n            array.forEach(this.layerInfos, function (layerInfo) {\n                // check if control is excluded\n                var controlOptions = layerInfo.controlOptions;\n                if (controlOptions && controlOptions.exclude === true) {\n                    return;\n                }\n                var mod = this._controls[layerInfo.type];\n                if (mod) {\n                    modules.push(mod);\n                } else {\n                    topic.publish('viewer/handleError', {\n                        source: 'LayerControl',\n                        error: 'the layer type \"' + layerInfo.type + '\" is not supported'\n                    });\n                }\n            }, this);\n            // load and go\n            require(modules, lang.hitch(this, function () {\n                array.forEach(this.layerInfos, function (layerInfo) {\n                    // exclude from widget\n                    var controlOptions = layerInfo.controlOptions;\n                    if (controlOptions && controlOptions.exclude === true) {\n                        return;\n                    }\n                    var control = this._controls[layerInfo.type];\n                    if (control) {\n                        require([control], lang.hitch(this, '_addControl', layerInfo));\n                    }\n                }, this);\n                this._checkReorder();\n            }));\n        },\n        // create layer control and add to appropriate _container\n        _addControl: function (layerInfo, LayerControl) {\n            var layerControl = new LayerControl({\n                controller: this,\n                layer: (typeof layerInfo.layer === 'string') ? this.map.getLayer(layerInfo.layer) : layerInfo.layer, // check if we have a layer or just a layer id\n                layerTitle: layerInfo.title,\n                controlOptions: lang.mixin({\n                    noLegend: null,\n                    noZoom: null,\n                    noTransparency: null,\n                    swipe: null,\n                    expanded: false,\n                    sublayers: true\n                }, layerInfo.controlOptions)\n            });\n            layerControl.startup();\n            if (this.separated) {\n                if (layerControl._layerType === 'overlay') {\n                    this._overlayContainer.addChild(layerControl, 'first');\n                } else {\n                    this._vectorContainer.addChild(layerControl, 'first');\n                }\n            } else {\n                this.addChild(layerControl, 'first');\n            }\n        },\n        // move control up in controller and layer up in map\n        _moveUp: function (control) {\n            var id = control.layer.id,\n                node = control.domNode,\n                index;\n            if (control._layerType === 'overlay') {\n                if (control.getPreviousSibling()) {\n                    index = array.indexOf(this.map.layerIds, id);\n                    this.map.reorderLayer(id, index + 1);\n                    this._overlayContainer.containerNode.insertBefore(node, node.previousSibling);\n                    this._checkReorder();\n                }\n            } else if (control._layerType === 'vector') {\n                if (control.getPreviousSibling()) {\n                    index = array.indexOf(this.map.graphicsLayerIds, id);\n                    this.map.reorderLayer(id, index + 1);\n                    this._vectorContainer.containerNode.insertBefore(node, node.previousSibling);\n                    this._checkReorder();\n                }\n            }\n        },\n        // move control down in controller and layer down in map\n        _moveDown: function (control) {\n            var id = control.layer.id,\n                node = control.domNode,\n                index;\n            if (control._layerType === 'overlay') {\n                if (control.getNextSibling()) {\n                    index = array.indexOf(this.map.layerIds, id);\n                    this.map.reorderLayer(id, index - 1);\n                    this._overlayContainer.containerNode.insertBefore(node, node.nextSibling.nextSibling);\n                    this._checkReorder();\n                }\n            } else if (control._layerType === 'vector') {\n                if (control.getNextSibling()) {\n                    index = array.indexOf(this.map.graphicsLayerIds, id);\n                    this.map.reorderLayer(id, index - 1);\n                    this._vectorContainer.containerNode.insertBefore(node, node.nextSibling.nextSibling);\n                    this._checkReorder();\n                }\n            }\n        },\n        // enable/disable move up/down menu items when the last or first child respectively\n        _checkReorder: function () {\n            if (this.separated) {\n                if (this.vectorReorder) {\n                    array.forEach(this._vectorContainer.getChildren(), function (child) {\n                        if (!child.getPreviousSibling()) {\n                            child._reorderUp.set('disabled', true);\n                        } else {\n                            child._reorderUp.set('disabled', false);\n                        }\n                        if (!child.getNextSibling()) {\n                            child._reorderDown.set('disabled', true);\n                        } else {\n                            child._reorderDown.set('disabled', false);\n                        }\n                    }, this);\n                }\n                if (this.overlayReorder) {\n                    array.forEach(this._overlayContainer.getChildren(), function (child) {\n                        if (!child.getPreviousSibling()) {\n                            child._reorderUp.set('disabled', true);\n                        } else {\n                            child._reorderUp.set('disabled', false);\n                        }\n                        if (!child.getNextSibling()) {\n                            child._reorderDown.set('disabled', true);\n                        } else {\n                            child._reorderDown.set('disabled', false);\n                        }\n                    }, this);\n                }\n            }\n        },\n        // zoom to layer\n        _zoomToLayer: function (layer) {\n            if (layer.declaredClass === 'esri.layers.KMLLayer') {\n                return;\n            }\n\n            // need to \"merge\" each kml layers fullExtent for project geometries\n\n            var map = this.map;\n            if (layer.spatialReference === map.spatialReference) {\n                map.setExtent(layer.fullExtent, true);\n            } else {\n                if (esriConfig.defaults.geometryService) {\n                    esriConfig.defaults.geometryService.project(lang.mixin(new ProjectParameters(), {\n                        geometries: [layer.fullExtent],\n                        outSR: map.spatialReference\n                    }), function (r) {\n                        map.setExtent(r[0], true);\n                    }, function (e) {\n                        topic.publish('viewer/handleError', {\n                            source: 'LayerControl._zoomToLayer',\n                            error: e\n                        });\n                    });\n                } else {\n                    topic.publish('viewer/handleError', {\n                        source: 'LayerControl._zoomToLayer',\n                        error: 'esriConfig.defaults.geometryService is not set'\n                    });\n                }\n            }\n        },\n        // layer swiper\n        _swipeLayer: function (layer, type) {\n            if (!layer || !layer.visible) {\n                return;\n            }\n            if (!this._swiper) {\n                require(['esri/dijit/LayerSwipe'], lang.hitch(this, function (LayerSwipe) {\n                    this._swiper = new LayerSwipe({\n                        type: type || 'vertical',\n                        map: this.map,\n                        layers: [layer]\n                    }, domConst.create('div', {}, this.map.id, 'first'));\n                    this._swiper.startup();\n                    this._swiper.disableBtn = new Button({\n                        label: 'Exit Layer Swipe',\n                        onClick: lang.hitch(this, '_swipeDisable')\n                    }, domConst.create('div', {}, this.map.id));\n                    domAttr.set(this._swiper.disableBtn.domNode, 'style', this.swiperButtonStyle);\n                }));\n            } else {\n                this._swiper.disable();\n                if (this._swipeLayerToggleHandle) {\n                    this._swipeLayerToggleHandle.remove();\n                }\n                this._swiper.set('layers', [layer]);\n                this._swiper.set('type', type);\n                this._swiper.enable();\n                domAttr.set(this._swiper.disableBtn.domNode, 'style', this.swiperButtonStyle);\n            }\n            this._swipeLayerToggleHandle = topic.subscribe('layerControl/layerToggle', lang.hitch(this, function (d) {\n                if (d.id === layer.id && !d.visible) {\n                    this._swipeDisable();\n                }\n            }));\n        },\n        _swipeDisable: function () {\n            this._swiper.disable();\n            if (this._swipeLayerToggleHandle) {\n                this._swipeLayerToggleHandle.remove();\n            }\n            domAttr.set(this._swiper.disableBtn.domNode, 'style', 'display:none;');\n        },\n        // turn all layers on/off\n        //   no arguments\n        //   b/c controls are self aware of layer visibility change simply show/hide layers\n        showAllLayers: function () {\n            if (this.separated) {\n                array.forEach(this._vectorContainer.getChildren(), function (child) {\n                    child.layer.show();\n                });\n                array.forEach(this._overlayContainer.getChildren(), function (child) {\n                    child.layer.show();\n                });\n            } else {\n                array.forEach(this.getChildren(), function (child) {\n                    child.layer.show();\n                });\n            }\n        },\n        hideAllLayers: function () {\n            if (this.separated) {\n                array.forEach(this._vectorContainer.getChildren(), function (child) {\n                    child.layer.hide();\n                });\n                array.forEach(this._overlayContainer.getChildren(), function (child) {\n                    child.layer.hide();\n                });\n            } else {\n                array.forEach(this.getChildren(), function (child) {\n                    child.layer.hide();\n                });\n            }\n        }\n    });\n    return LayerControl;\n});"]}